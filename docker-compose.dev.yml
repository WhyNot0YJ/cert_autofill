version: '3.8'

services:
  # 后端Flask服务（开发环境）
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: cert-autofill-backend-dev
    restart: unless-stopped
    environment:
      - ENV=development
      - FLASK_ENV=development
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///cert_autofill.db}
      - SERVER_URL=${SERVER_URL:-http://localhost}
      - DIFY_API_KEY=${DIFY_API_KEY:-app-aOHstplRYJhO3uadmVwKnf8E}
      - DIFY_API_BASE=${DIFY_API_BASE:-https://api.dify.ai/v1}
      - BACKEND_PORT_DEV=${BACKEND_PORT_DEV:-5000}
      - BACKEND_PORT_PROD=${BACKEND_PORT_PROD:-5001}
    volumes:
      - backend_data:/app/uploads
      - backend_db:/app
    ports:
      - "${BACKEND_PORT_DEV:-5000}:5000"
    networks:
      - cert-autofill-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端Vue服务（开发环境）
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cert-autofill-frontend-dev
    restart: unless-stopped
    environment:
      - ENV=development
      - FRONTEND_PORT_DEV=${FRONTEND_PORT_DEV:-80}
      - FRONTEND_PORT_PROD=${FRONTEND_PORT_PROD:-81}
      - BACKEND_PORT_DEV=${BACKEND_PORT_DEV:-5000}
      - BACKEND_PORT_PROD=${BACKEND_PORT_PROD:-5001}
    ports:
      - "${FRONTEND_PORT_DEV:-80}:80"
    depends_on:
      - backend
    networks:
      - cert-autofill-network

volumes:
  backend_data:
    driver: local
  backend_db:
    driver: local

networks:
  cert-autofill-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
